{"version":3,"file":"subPackages/pages/audio/index.js","sources":["webpack:///./src/subPackages/pages/audio/index.tsx","webpack:///./src/subPackages/pages/audio/audioPlayer.tsx","webpack:///./src/subPackages/pages/audio/index.scss","webpack:///./src/subPackages/pages/audio/index.tsx?cabd","webpack:///./src/subPackages/pages/audio/utils.ts"],"sourcesContent":["import { Progress, Swiper, SwiperItem, Audio, View } from \"@tarojs/components\"\nimport React, { Component, useState } from \"react\"\nimport Taro from \"@tarojs/taro\"\nimport AudioPlayer from \"./audioPlayer\";\n\nconst PaoMao = \"http://cdn.hixiaoya.com/paomo.mp3\";\nconst DzqImg = \"http://cdn.hixiaoya.com/dzq.jpg\";\n\nimport './index.scss'\n\nconst AudioPage = (props) => {\n  const [current, setCurrent] = useState(0)\n  const onPlay = (e) => {\n    console.log('e', e);\n    setCurrent(e.detail.current)\n  }\n  return (\n    <Swiper\n      className='discover-swiper'\n      indicatorColor='#999'\n      indicatorActiveColor='#333'\n      vertical={true}\n      circular={false}\n      indicatorDots={false}\n      autoplay={false}\n      onChange={onPlay}\n    >\n      {[1,2,3,4].map((v, k) => {\n        console.log('current', current, k);\n        return (\n          <SwiperItem\n            key={v}\n            className='discover-audio-main'>\n            {current === k && <AudioPlayer\n              id={'video'+k}\n              className='discover-audio'\n              current={current}\n              src={PaoMao}\n              title={\"泡沫\"}\n              author={\"FU\"}\n              poster={\"https://file.biji77.com/goods/%E9%85%B8%E5%A5%B6%E8%8A%92%E6%9E%9C%E7%87%95%E9%BA%A6%E7%9B%92%E5%AD%901.jpg\"}\n              autoplay={true}\n            />}\n            <View className=\"discover-header\">\n              <View className=\"discover-loading-line\"></View>\n            </View>\n            <View className=\"discover-actions\">\n              <View className=\"discover-action discover-user-icon\">\n                <View className=\"discover-action-icon\">我</View>\n              </View>\n              <View className=\"discover-action discover-like\">\n                <View className=\"discover-action-icon\">赞</View>\n                <View className=\"discover-action-number\">868</View>\n              </View>\n              <View className=\"discover-action discover-review\">\n                <View className=\"discover-action-icon\">评</View>\n                <View className=\"discover-action-number\">68</View>\n              </View>\n              <View className=\"discover-action discover-forward\">\n                <View className=\"discover-action-icon\">转</View>\n                <View className=\"discover-action-number\">668</View>\n              </View>\n            </View>\n            <View className=\"discover-footer\">\n              <View className=\"discover-user-name\">\n                @Foooying\n              </View>\n              <View className=\"discover-desc\">\n                买农产品，上原生优品。\n              </View>\n              <View className=\"discover-music\"></View>\n              {/* <View className=\"discover-play-line\">\n                <Progress\n                  className=\"discover-play-progress\"\n                  percent={Number(percent.currentTime/percent.duration) * 100}\n                  strokeWidth={0.5}\n                  color={\"#09BB07\"}\n                  activeColor={\"#09BB07\"}\n                  />\n              </View> */}\n            </View>\n          </SwiperItem>)\n      })}\n    </Swiper>\n  )\n}\n\nexport default AudioPage","import React, { ComponentClass, Component } from 'react';\nimport Taro from '@tarojs/taro';\nimport { View, Slider, Text, Image } from '@tarojs/components';\nimport './index.scss';\nimport {getMinute, getSecond} from \"./utils\";\n\nconst CDN = 'http://cdn2.ibt.tel/';\nconst playSrc = CDN + 'wordcamp/stu/icon/play_icon.png';\nconst pauseSrc = CDN + 'wordcamp/stu/icon/pause_icon.png';\n\n/**\n ### Props\n| 参数 | 说明 | 类型 | 默认值 | 是否必须 |\n|------|------|------|------|------|\n| src | 音频资源的地址  | `string` | 无 | 是 |\n| draggable | 是否可以拖动进度条 | `boolean` | true | 否 |\n| title | 音频名称 | `string` | 无 | 否 |\n| author | 音频作者 | `string` | 无 | 否 |\n| autoplay | 是否自动播放 | `boolean` | `false`| 否 |\n| poster | 音频海报 | `string` | 无 | 否 |\n| onPlay | 当开始/继续播放时触发play事件 | `eventHandle` | 无 | 否 \n| onPause | 当暂停播放时触发 pause 事件 | `eventHandle` | 无 | 否\n| onEnded | 当播放到末尾时触发 ended 事件 | `eventHandle` | 无 | 否\n| onTimeUpdate | 当播放进度改变时触发 timeupdate 事件，detail = {currentTime, duration} | `eventHandle` | 无 | 否\n| onError | 当发生错误时触发 error 事件，detail = {errMsg:MediaError.code} | `eventHandle` | 无 | 否\n */\n\ninterface AudioPlayerProps {\n  id?: string,\n  src: string,\n  current: number,\n  title?: string,\n  author?: string,\n  draggable?: boolean,\n  autoplay?: boolean,\n  poster?: string,\n  className?: string,\n  onPlay?: () => void,\n  onPause?: () => void,\n  onEnded?: () => void,\n  onError?: (data: any) => void,\n  onTimeUpdate?: (options: {\n    currentTime: number,\n    duration?: number,\n  }) => void\n}\n\ninterface AudioContext {\n  src: string,\n  autoplay: boolean,\n  readonly currentTime: number,\n  readonly onCanplay: void,\n  readonly destroy: void,\n  readonly duration: number,\n  readonly onTimeUpdate: void,\n  readonly onEnded: void,\n  readonly onStop: void,\n  readonly seek: void,\n  readonly play: void,\n  readonly onPlay: void,\n  readonly onPause: void,\n  readonly onError: void,\n  readonly paused\n}\n\ninterface StateType {\n  readonly  currentTime: number,\n  readonly iconSrc: string,\n  readonly duration: number,\n  readonly showTime1: string,\n  readonly showTime2: string\n}\n\n//自动播放时，图标应该正确响应\nclass AudioPlayer extends Component<AudioPlayerProps, any> {\n  innerAudioContext = Taro.createInnerAudioContext();\n  static defaultProps = {\n    autoplay: false,\n    draggable: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.sliderChange = this.sliderChange.bind(this);\n    this.changeIconSrc = this.changeIconSrc.bind(this);\n  }\n\n  state: StateType = {\n    currentTime: 0, //当前播放时间，单位s\n    iconSrc: playSrc,\n    duration: 0,  // 默认播放总时长，单位s\n    showTime1: '00:00',\n    showTime2: '00:00'\n  };\n\n  componentDidMount() {\n    const { autoplay = false, src = '' } = this.props;\n    console.log('this.props', autoplay);\n    this.innerAudioContext.autoplay = autoplay;\n    this.innerAudioContext.src = src;\n\n    if (autoplay) {\n      this.setState({\n        iconSrc: pauseSrc\n      })\n    } else {\n      this.setState({iconSrc: playSrc})\n    }\n\n    let min: string;\n    let sec: string;\n    let duration: number;\n\n    this.innerAudioContext.onCanplay(() => {\n      //延时获取音频真正的duration\n      duration = this.innerAudioContext.duration; //单位秒\n\n      min = getMinute(duration);\n      sec = getSecond(duration);\n\n      this.setState({duration: duration, showTime2: `${min}:${sec}`});\n\n      //刷新时间\n      const interval = setInterval(() => {\n        duration = this.innerAudioContext.duration; //单位秒\n        if (duration) {\n          min = getMinute(duration);\n          sec = getSecond(duration);\n          this.setState({duration: duration, showTime2: `${min}:${sec}`});\n          clearInterval(interval)\n        }\n      }, 150)\n\n    });\n    this.innerAudioContext.onTimeUpdate(() => {\n      const currentTime = this.innerAudioContext.currentTime;\n      const duration = this.innerAudioContext.duration;\n      min = getMinute(currentTime);\n      sec = getSecond(currentTime);\n      this.setState({showTime1: `${min}:${sec}`, currentTime: currentTime});\n      this.props.onTimeUpdate && this.props.onTimeUpdate({\n        currentTime,\n        duration\n      });\n    });\n\n    this.innerAudioContext.onPlay(() => {\n      console.log('current', this.props.current)\n      duration = this.innerAudioContext.duration; //单位秒\n      min = getMinute(duration);\n      sec = getSecond(duration);\n      this.setState({duration: duration, showTime2: `${min}:${sec}`});\n      this.props.onPlay && this.props.onPlay();\n    });\n\n    this.innerAudioContext.onPause(() => {\n      //有时，手机息屏之后会暂停播放音频  修改图标啊\n      this.setState({\n        iconSrc: playSrc\n      });\n      this.props.onPause && this.props.onPause();\n    });\n\n    this.innerAudioContext.onError((res) => {\n      console.log(res.errMsg);\n      console.log(res.errCode);\n      Taro.showModal({title: '出错了', content: res.errMsg});\n      this.props.onError && this.props.onError(res);\n    });\n\n    this.innerAudioContext.onEnded(() => {\n      this.setState({\n        iconSrc: playSrc\n      })\n      this.props.onEnded && this.props.onEnded()\n    })\n\n    this.innerAudioContext.onStop(() => {\n      //修改图标啊\n      this.setState({\n        iconSrc: playSrc\n      });\n    })\n\n  }\n\n  componentWillUnmount() {\n    if (this.innerAudioContext) {\n      this.innerAudioContext.destroy();\n    }\n  }\n\n  //播放暂停\n  changeIconSrc() {\n    let iconSrc = this.state.iconSrc;\n    if (iconSrc === playSrc) {\n      iconSrc = pauseSrc;\n      this.innerAudioContext.play();\n    } else {\n      iconSrc = playSrc;\n      this.innerAudioContext.pause();\n    }\n\n    this.setState({\n      iconSrc: iconSrc\n    })\n\n  }\n\n  //改变进度条\n  sliderChange(event) {\n\n    const min: string = getMinute(event.detail.value);\n    const sec: string = getSecond(event.detail.value);\n    this.setState({\n      currentTime: event.detail.value,\n      showTime1: `${min}:${sec}`\n    });\n    this.innerAudioContext.seek(event.detail.value);\n    if (this.innerAudioContext.paused) {\n\n    } else {\n      this.innerAudioContext.play();\n    }\n  }\n\n  // 正在拖动的过程中\n  sliderChangeIng() {\n\n  }\n\n\n  render() {\n    const { currentTime, showTime2, showTime1, duration, iconSrc } = this.state;\n    const { poster, title, author, draggable, className } = this.props;\n    return (\n      <View className={'co-audio-wrap ' + className}>\n        {\n          poster && (\n            <View className='poster-wrap'>\n              <Image src={poster} className='poster' mode='widthFix' />\n            </View>\n          )\n        }\n\n        <View className='text-wrap'>\n          {\n            title && (\n              <View className='audio-draggable'>\n                <Text>{title}</Text>\n              </View>\n            )\n          }\n          {\n            author && (\n              <View className='audio-author'>\n                <Text>{author}</Text>\n              </View>\n            )\n          }\n\n        </View>\n\n\n        <View className='player'>\n          <Image src={iconSrc} onClick={this.changeIconSrc} />\n          <View className='slider'>\n            <Slider\n              onChange={this.sliderChange}\n              min={0}\n              step={1}\n              max={duration}\n              block-size={12} value={currentTime}\n              onChanging={this.sliderChangeIng}\n              disabled={!draggable}\n            />\n          </View>\n          <View className='time'>\n            {showTime1}/{showTime2}\n          </View>\n        </View>\n      </View>\n\n    )\n  }\n}\n\n\nexport default AudioPlayer as ComponentClass;\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationStyle\":\"custom\",\"enableShareAppMessage\":true,\"enableShareTimeline\":true,\"navigationBarTitleText\":\"Discover sound\"};\ncomponent.enableShareTimeline = true\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'subPackages/pages/audio/index', {root:{cn:[]}}, config || {}))\n\n","function getMinute(time: number): string {\n  const _min: number = Math.floor(time / 60);\n  let min: string;\n  if (_min < 10) {\n    min = `0${_min}`;\n  } else {\n    min = \"\" + _min;\n  }\n  return min;\n}\n\n\nfunction getSecond(time: number): string {\n  const _sec: number = Math.floor(time % 60);\n  let sec: string;\n  if (_sec < 10) {\n    sec = `0${_sec}`;\n  } else {\n    sec = \"\" + _sec\n  }\n  return sec;\n}\n\nexport {\n  getMinute,\n  getSecond\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAEA;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AAGA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAZA;AAiBA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAPA;AAjCA;AAHA;AAVA;AAPA;AACA;AA4EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+CA;AACA;;;;;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAQA;AAAA;AACA;AACA;AAAA;AACA;AACA;AALA;AACA;AALA;AACA;AAJA;AAKA;AACA;;;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAGA;AACA;AACA;AACA;;;AAEA;;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAMA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAOA;AAAA;AACA;AAAA;AADA;AAVA;AAmBA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AADA;AAWA;AAAA;AAAA;AAbA;AA5BA;AAgDA;;;;AAnNA;AACA;AADA;AAGA;AACA;AAFA;AACA;AAoNA;;;;;;;;;;;ACjSA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}